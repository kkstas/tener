package components

import (
	"context"
	"strconv"

	"github.com/kkstas/tener/internal/model/expense"
	"github.com/kkstas/tener/internal/model/expensecategory"
)

templ Expense2(ctx context.Context, paymentMethods []string, categories []expensecategory.Category) {
	<div x-data="{ id: $id('accordion') }" class="relative has-[:focus]:bg-zinc-100/20 dark:has-[:focus]:bg-zinc-900/20 cursor-pointer">
		<div
			:id="'expense-loading-overlay-' + exp.SK.replace(/[^a-zA-Z0-9_-]/g, '_')"
			class="hidden absolute w-full z-50 h-full rounded-md justify-center align-middle content-center"
			style="flex-wrap: wrap; backdrop-filter: blur(4px);"
		>
			@loadingSpinner()
		</div>
		<button @click="setActiveAccordion(id)" class="flex items-center focus:outline-none justify-between w-full p-4 text-left select-none">
			<div class="flex flex-1 justify-between">
				<div class="flex flex-col justify-between flex-1">
					<div class="text-lg font-medium" x-text="exp.Name"></div>
					<div class="text-xs dark:text-zinc-400" x-text="exp.Category"></div>
				</div>
				<div class="text-end flex flex-col justify-between">
					<div class="flex justify-end items-center text-lg font-medium">
						<span :title="exp.PaymentMethod">
							<template x-if="exp.PaymentMethod === 'Credit Card'"><svg class="size-5 pb-0.5 pe-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 0 0 2.25-2.25V6.75A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25v10.5A2.25 2.25 0 0 0 4.5 19.5Z"></path> </svg> </template>
							<template x-if="exp.PaymentMethod === 'Debit Card'"><svg class="size-5 pb-0.5 pe-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 0 0 2.25-2.25V6.75A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25v10.5A2.25 2.25 0 0 0 4.5 19.5Z"></path> </svg> </template>
							<template x-if="exp.PaymentMethod === 'Cash'"><svg class="size-5 pb-0.5 pe-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18.75a60.07 60.07 0 0 1 15.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 0 1 3 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 0 0-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 0 1-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 0 0 3 15h-.75M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm3 0h.008v.008H18V10.5Zm-12 0h.008v.008H6V10.5Z"></path> </svg> </template>
						</span>
						<span x-text="exp.Amount.toFixed(2) + ' PLN'"></span>
					</div>
					<div class="text-xs dark:text-zinc-400" x-text="exp.Date"></div>
				</div>
			</div>
		</button>
		<div
			x-show="activeAccordion==id"
			x-data="{ popoverOpen: false }"
			x-effect="if (activeAccordion !== id && popoverOpen === true) { popoverOpen = false; }"
			x-collapse
			x-cloak
		>
			<hr class="w-[80%] mx-auto mb-2 dark:border-zinc-700"/>
			<div class="flex justify-center pb-2">
				<button
					type="button"
					class="mx-2 px-4 py-1 inline-flex items-center justify-center text-sm font-medium tracking-wide text-red-600 dark:text-white hover:text-white bg-white dark:bg-red-600 hover:bg-red-500 dark:hover:bg-red-700 border-2 border-red-500 dark:border-transparent rounded-md transition-colors duration-100 focus:outline-zinc-800/10 dark:focus:outline-zinc-200/30 focus:outline-1 focus:shadow-outline focus:outline-none"
					:hx-delete="composeURI(urlStart, [ 'json', 'expense', exp.SK ])"
					:data-loading-path="composeURI(urlStart, [ 'json', 'expense', exp.SK ])"
					:data-loading-target="'#expense-loading-overlay-' + exp.SK.replace(/[^a-zA-Z0-9_-]/g, '_')"
					data-loading-class-remove="hidden"
					hx-swap="none"
					hx-include="#main-date-range-picker-from, #main-date-range-picker-to, #categories"
					@htmx:after-request.camel="
						console.log('@htmx:after-request.camel triggered from Expense2 DELETE button');
						if (event.detail.successful && event.detail.xhr.responseURL.includes($el.getAttribute('hx-delete'))) {
							const parsed = JSON.parse(event.detail.xhr.response);
							categories = parsed.categories;
							expenses = parsed.expenses;
							users = parsed.users;
							return;
						}
					"
					:hx-confirm='"Are you sure you want to delete expense " + exp.Name + "(" + exp.Amount.toFixed(2) + " PLN)?"'
				>
					Delete	
				</button>
				<div
					class="relative"
				>
					<button
						x-ref="popoverButton"
						@click="popoverOpen=!popoverOpen"
						class="mx-2 px-4 py-1 text-blue-500 dark:text-zinc-200 hover:text-white bg-white hover:bg-blue-500 dark:bg-blue-500 dark:hover:bg-blue-600 border-blue-500 dark:border-transparent border-2 rounded-md text-sm font-medium tracking-wide inline-flex items-center justify-center transition-colors duration-100 focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-200/30 focus:outline-1"
					>
						Edit
					</button>
				</div>
			</div>
			<div x-show="popoverOpen && activeAccordion==id" x-collapse x-cloak>
				<hr class="w-[80%] mx-auto mb-2 dark:border-zinc-700"/>
				<form
					:data-loading-path="composeURI(urlStart, ['json', 'expense', 'edit', exp.SK])"
					:data-loading-target="'#expense-loading-overlay-' + exp.SK.replace(/[^a-zA-Z0-9_-]/g, '_')"
					data-loading-class-remove="hidden"
					class="grid gap-2 px-5"
					:hx-put="composeURI(urlStart, [ 'json', 'expense', 'edit', exp.SK ])"
					x-data="{ formErrors: {} }"
					x-effect="if (popoverOpen) { formErrors = {}; $el.reset(); }"
					hx-swap="none"
					hx-include="#main-date-range-picker-from, #main-date-range-picker-to, #categories"
					@htmx:after-request.camel="
						console.log('@htmx:after-request.camel triggered from Expense2 FORM');
						if (event.detail.successful && event.detail.xhr.responseURL.endsWith($el.getAttribute('hx-put'))) {
							const parsed = JSON.parse(event.detail.xhr.response);
							categories = parsed.categories;
							expenses = parsed.expenses;
							users = parsed.users;

							setActiveAccordion();
							return;
						}

						if (!event.detail.successful && typeof event.detail.xhr === 'object' && event.detail.xhr !== null && !Array.isArray(event.detail.xhr)) {
							const parsed = JSON.parse(event.detail.xhr.response);
							if (typeof parsed.message === 'object') {
								formErrors = parsed.message;
							} else {
								document.getElementById('monthsBarChartContainer').dispatchEvent(new Event('reload-chart'));
								popoverOpen = false;
							}
							return;
						}
					"
				>
					<div class="grid items-center grid-cols-3 gap-4">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="edit-expense-name-input"
						>Name</label>
						<input
							x-bind:class="formErrors.name && 'border-red-500'"
							class="flex w-full h-8 col-span-2 px-3 py-2 text-sm bg-transparent border dark:border-zinc-700 rounded-md border-input ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-300/20 focus:outline-1 disabled:cursor-not-allowed disabled:opacity-50"
							id="edit-expense-name-input"
							type="text"
							name="name"
							:placeholder="exp.Name"
							minlength={ strconv.Itoa(expense.NameMinLength) }
							maxlength={ strconv.Itoa(expense.NameMaxLength) }
							required
						/>
						<template x-for="err in formErrors.name">
							<p x-text="err" class="flex w-full col-span-3 text-red-500 text-xs italic mb-3 mt-0 p-0"></p>
						</template>
					</div>
					<div
						class="grid items-center grid-cols-3 gap-4"
					>
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="edit-expense-category-input"
						>Category</label>
						<div class="flex w-full h-8 col-span-2 relative">
							<select
								id="edit-expense-category-input"
								name="category"
								class="shadow appearance-none border dark:border-zinc-700 dark:bg-zinc-800 rounded w-full py-2 px-3 text-zinc-700 dark:text-zinc-200 leading-tight focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-300/20 focus:outline-1"
							>
								for _, category := range categories {
									<option :selected="exp.Category === $el.textContent">{ category.Name }</option>
								}
							</select>
							<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-zinc-700">
								<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path></svg>
							</div>
						</div>
						<template x-for="err in formErrors.category">
							<p x-text="err" class="flex w-full col-span-3 text-red-500 text-xs italic mb-3 mt-0 p-0"></p>
						</template>
					</div>
					<div
						class="grid items-center grid-cols-3 gap-4"
					>
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="edit-expense-amount-input"
						>Amount</label>
						<input
							class="flex w-full h-8 col-span-2 px-3 py-2 text-sm bg-transparent border dark:border-zinc-700 rounded-md border-input ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-300/20 focus:outline-1 disabled:cursor-not-allowed disabled:opacity-50"
							id="edit-expense-amount-input"
							name="amount"
							type="text"
							:placeholder="exp.Amount.toFixed(2) + ' PLN'"
							inputmode="decimal"
							pattern="^\d+([.,]\d{1,2})?$"
							title="Please enter a valid price (e.g., '24', '24.99', '24,99')"
							required
						/>
						<template x-for="err in formErrors.amount">
							<p x-text="err" class="flex w-full col-span-3 text-red-500 text-xs italic mb-3 mt-0 p-0"></p>
						</template>
					</div>
					<div
						class="grid items-center grid-cols-3 gap-4"
					>
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="edit-expense-date-input"
						>Date</label>
						<input
							id="edit-expense-date-input"
							class="flex w-full h-8 col-span-2 px-3 py-2 text-sm bg-transparent border dark:border-zinc-700 rounded-md border-input ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-300/20 focus:outline-1 disabled:cursor-not-allowed disabled:opacity-50"
							type="date"
							name="date"
							:placeholder="exp.Date"
							required
						/>
						<template x-for="err in formErrors.date">
							<p x-text="err" class="flex w-full col-span-3 text-red-500 text-xs italic mb-3 mt-0 p-0"></p>
						</template>
					</div>
					<div
						class="grid items-center grid-cols-3 gap-4"
					>
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="edit-expense-payment-method-input"
						>Payment method</label>
						<div class="flex w-full h-8 col-span-2 relative">
							<select
								id="edit-expense-payment-method-input"
								class="shadow appearance-none border dark:bg-zinc-800 dark:border-zinc-700 rounded w-full py-2 px-3 text-zinc-700 dark:text-zinc-200 leading-tight focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-300/20 focus:outline-1"
								name="paymentMethod"
							>
								for _, paymentMethod := range paymentMethods {
									<option :selected="exp.PaymentMethod === $el.textContent">{ paymentMethod }</option>
								}
							</select>
							<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-zinc-700">
								<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path></svg>
							</div>
						</div>
						<template x-for="err in formErrors.paymentMethod">
							<p x-text="err" class="flex w-full col-span-3 text-red-500 text-xs italic mb-3 mt-0 p-0"></p>
						</template>
					</div>
					<button
						type="submit"
						class="mt-3 inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 bg-blue-500 rounded-md hover:bg-blue-600 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none"
					>Submit</button>
					<button
						@click="popoverOpen = false;"
						type="button"
						class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide transition-colors duration-100 rounded-md text-zinc-600 dark:text-zinc-200 bg-zinc-100 dark:bg-zinc-700 hover:text-zinc-600 dark:hover:text-white hover:bg-zinc-100 dark:hover:bg-zinc-600/80 focus:shadow-outline focus:outline-none focus:outline-zinc-800/10 dark:focus:outline-zinc-200/30 focus:outline-1"
						data-loading-disable
					>
						Cancel
					</button>
					<div class="h-2 w-full"></div>
				</form>
			</div>
		</div>
	</div>
}
