package components

import (
	"fmt"
	"context"

	"github.com/kkstas/tjener/internal/model"
	"github.com/kkstas/tjener/internal/url"
)

const (
	buttonStyles                       = "bg-white hover:bg-gray-100 text-gray-800 font-medium py-1 px-3 border border-gray-400 rounded shadow"
	inputStyles                        = "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
	singleExpenseContainerStyles       = "border border-gray-300 px-1 py-2 rounded mt-2"
	insideSingleExpenseContainerStyles = "flex flex-row place-items-center overflow-hidden break-words"
)

templ SingleExpense(ctx context.Context, expense model.Expense) {
	<div hx-target="this" hx-swap="outerHTML" class={ singleExpenseContainerStyles }>
		<div class={ insideSingleExpenseContainerStyles }>
			<div class={ "flex-1 p-2" }>
				<div>Name</div>
				if expense.Name == "" {
					<div>-</div>
				} else {
					<div>{ expense.Name }</div>
				}
			</div>
			<div class={ "flex-1 p-2" }>
				<label>Category</label>
				<div>{ expense.Category }</div>
			</div>
			<div class={ "flex-1 p-2" }>
				<label>Amount</label>
				<div>{ fmt.Sprintf("%.2f %s", expense.Amount, expense.Currency) }</div>
			</div>
			<button class="p-2" hx-get={ url.Create(ctx, "expense", "edit", expense.SK) }>
				<svg class="w-4 h-4 p-0 m-0" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"><path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"></path></svg>
			</button>
		</div>
	</div>
}

templ EditSingleExpense(ctx context.Context, expense model.Expense) {
	<form hx-put={ url.Create(ctx, "expense", "edit", expense.SK) } hx-target="this" hx-swap="outerHTML" class={ singleExpenseContainerStyles }>
		<div class={ insideSingleExpenseContainerStyles }>
			<div class={ "flex-1 min-w-5 p-2" }>
				<label>Name</label>
				<input class={ inputStyles } type="text" name="name" value={ expense.Name }/>
			</div>
			<div class={ "flex-1 min-w-5 p-2" }>
				<label>Category</label>
				<input class={ inputStyles } type="text" name="category" value={ expense.Category }/>
			</div>
			<div class={ "flex-1 min-w-5 p-2" }>
				<label>Amount</label>
				<input class={ inputStyles } type="text" name="amount" value={ fmt.Sprint(expense.Amount) }/>
			</div>
			<div class={ "flex-1 min-w-5 p-2" }>
				<label>Currency</label>
				<input class={ inputStyles } type="text" name="currency" value={ expense.Currency }/>
			</div>
		</div>
		<div class={ " w-full flex justify-center" }>
			<button class={ buttonStyles, "mx-1" }>Submit</button>
			<button class={ buttonStyles, "mx-1" } hx-get={ url.Create(ctx, "expense", expense.SK) }>Cancel</button>
		</div>
	</form>
}

templ expensesContainer(ctx context.Context, expenses []model.Expense) {
	<div id="expenses-container">
		for _, el := range expenses {
			@SingleExpense(ctx, el)
		}
	</div>
}

templ Page(ctx context.Context, expenses []model.Expense) {
	@baseHTML(ctx) {
		<div class="w-full flex justify-center">
			<a class={ buttonStyles } href={ templ.URL(url.Create(ctx, "expense", "create")) }>
				<p>Create new expense</p>
			</a>
		</div>
		@expensesContainer(ctx, expenses)
	}
}
