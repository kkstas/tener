package components

import (
	"context"

	"github.com/kkstas/tener/internal/model/expense"
	"github.com/kkstas/tener/internal/model/expensecategory"
	"github.com/kkstas/tener/internal/model/user"
	"github.com/kkstas/tener/internal/url"
)

templ Home(ctx context.Context, expenses []expense.Expense, paymentMethods []string, categories []expensecategory.Category, u user.User, users map[string]user.User, monthlySums []expense.MonthlySum) {
	@BaseHTML(ctx, true, u) {
		<div
			x-data="{
				activeAccordion: '',
				setActiveAccordion(id) { this.activeAccordion = (this.activeAccordion == id) ? '' : id }
			}"
			@keydown.escape.window="
				activeAccordion = '';
				document.querySelector('#main-date-range-picker')._flatpickr.close();
			"
		>
			<div
				class="my-3 relative w-full max-w-md mx-auto"
				x-data={ toJSON(map[string]any{
					"categories": categories,
					"expenses": expenses,
					"monthlySums": monthlySums,
					"paymentMethods": paymentMethods,
					"users": users,
					"urlStart": url.Create(ctx),
				}) }
				x-init="
					categories = categories ?? [];
					expenses = expenses ?? [];
					monthlySums = monthlySums ?? [];
					paymentMethods = paymentMethods ?? [];
					users = users ?? {};
				"
			>
				<div x-init="$watch('expenses', () => document.getElementById('monthsBarChartContainer').dispatchEvent(new CustomEvent('reload-chart')))">
					@MonthlySumsChart(ctx, expense.TransformToChartData(monthlySums))
				</div>
				@CreateExpenseContainer(ctx, paymentMethods, categories)
				<div class="flex justify-end pb-1">
					@ExpenseCategoryFilter(ctx, getUniqueCategoryNames(extractCategories(expenses), categories))
					@ExpenseDateRangePicker(ctx)
				</div>
				<div class="text-sm font-normal bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 divide-y divide-zinc-200 dark:divide-zinc-700 rounded-md divide-y-reverse overflow-hidden">
					<template x-for="exp in expenses" :key="exp.SK">
						@Expense(paymentMethods, categories)
					</template>
				</div>
			</div>
		</div>
	}
}
