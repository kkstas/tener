package components

import (
	"context"
	"strconv"

	"github.com/kkstas/tjener/internal/model"
	"github.com/kkstas/tjener/internal/url"
)

templ CreateExpenseContainer(ctx context.Context, currencies []string, categories []model.ExpenseCategory) {
	<div
		x-data="{ showCreateExpenseForm: false }"
		class="w-full flex justify-center"
	>
		@CreateExpenseButton(ctx)
		@CreateExpenseForm(ctx, currencies, categories)
	</div>
}

templ CreateExpenseButton(ctx context.Context) {
	<a
		x-show="!showCreateExpenseForm"
		x-on:click="
			showCreateExpenseForm = true;
		"
		id="createexpensebtn"
		class={ buttonStyles }
	>
		<p>Create new expense</p>
	</a>
}

templ CreateExpenseForm(ctx context.Context, currencies []string, categories []model.ExpenseCategory) {
	<form
		x-show="showCreateExpenseForm"
		id="createexpenseform"
		class="mx-auto lg:max-w-screen-md"
		hx-post={ url.Create(ctx, "expense", "create") }
		hx-swap="afterbegin"
		hx-target="#expenses-container"
		hx-on::after-request="insertDatesBetweenExpenses();"
	>
		<div>
			<label>Name</label>
			<input
				class={ inputStyles }
				type="text"
				name="name"
				minlength={ strconv.Itoa(model.ExpenseNameMinLength) }
				maxlength={ strconv.Itoa(model.ExpenseNameMaxLength) }
				required
			/>
		</div>
		<div>
			<label>Currency</label>
			<div class="relative">
				<select
					name="currency"
					class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none focus:bg-white focus:outline-gray-800/10 focus:outline-1"
				>
					for _, currency := range currencies {
						<option>{ currency }</option>
					}
				</select>
				<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
					<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path></svg>
				</div>
			</div>
		</div>
		<div>
			<label>Amount</label>
			<input
				class={ inputStyles }
				name="amount"
				type="number"
				step="0.01"
				placeholder="0.00"
				required
			/>
		</div>
		<div>
			<label>Category</label>
			<sup>
				<a
					class="text-xs text-blue-500"
					href={ templ.SafeURL(url.Create(ctx, "expensecategories")) }
				>Manage</a>
			</sup>
			<div class="relative">
				<select
					name="category"
					class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none focus:bg-white focus:outline-gray-800/10 focus:outline-1"
				>
					for _, category := range categories {
						<option>{ category.Name }</option>
					}
				</select>
				<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
					<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path></svg>
				</div>
			</div>
		</div>
		<div class="flex justify-center">
			<input
				type="submit"
				class={ buttonStyles, "my-2 mx-1" }
				value="Create"
			/>
			<a
				class={ buttonStyles, "my-2 mx-1" }
				x-on:click="
					showCreateExpenseForm = false;
				"
			>Cancel</a>
		</div>
	</form>
}
